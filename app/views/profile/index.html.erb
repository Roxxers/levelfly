<div class="wrapper">
  <div class="header">
    <div class="icon clickable">
      <img id="icon_major" src="/images/majors/null.png" width="130" height="135" />
    </div>
    <div class="level level_text">
      <!--Level Details goes here-->
      Level<br/>
      <div id="avatar_level" class="stat_numbers avatar_level">
        0
      </div>
    </div>
    <div class="title">
      <div id="full_name" name="full_name" class="full_name clickable"></div>
      <div id="major" class="major"></div>
    </div>
  </div> 
  
  <div class="selections">
    <div id="user_stats">
      <div class="stats_container">
        <div>
          LEVEL METER
        </div>
        <!-- level meter with progressbar -->
        <div id="level_meter">
          <div id="progressbar">
            <div id="progress_stats"></div>
          </div>
        </div>
        <!-- level meter ends -->
      </div>
      <div class="stats_container">
        <div>
          QUEST POINTS
        </div>
        <div id="quest_points" class="stat_numbers">
          0
        </div>
      </div>
      <div class="stats_container">
        <div>
          BADGES EARNED
        </div>
        <div id="badge_count" class="stat_numbers">
          0
        </div>
      </div>
    </div>
    <div id="wardrobe_options" class="wardrobe_options">
      <div id="wardrobe_categories" class="wardrobe_categories lev0">
        <div id="category_head" class="btn wardrobe_item clickable" value="head"></div>
        <div id="category_body" class="btn wardrobe_item clickable" value="body"></div>
        <div id="category_legs" class="btn wardrobe_item clickable" value="legs"></div>
        <div id="category_feet" class="btn wardrobe_item clickable" value="feet"></div>
        <div id="category_prop" class="btn wardrobe_item clickable" value="prop"></div>
      </div>
      <div id="uparr" class="nav_button clickable"></div>
      <div id="dwnarr" class="nav_button clickable"></div>
      <div class="indi">
        <img src="/images/ui/arrowb.png" width="46" height="35" />
      </div>
      <div id="subcategory_wrapper">
        <div class="lev1 wardrobe_subcategories">
          <div class="subcategory_scroll">
            <!-- subcategory items will dynamically append over here (for level 1) -->
          </div>
        </div>
        <div class="lev2 wardrobe_subcategories">
          <div class="subcategory_scroll">
            <!-- subcategory items will dynamically append over here (for level 2) -->
          </div>
        </div>
      </div>
      <div id="select_note" class="selection_instructions">What would you like to change?</div>
    </div>
  </div>
  <div id="modify" class="avat clickable">
    <img id="background" class="avatar">
    <img id="avatar_body" class="avatar">
    <!-- <img id="hat_back" class="avatar"> -->
    <img id="hair_back" class="avatar">
    <img id="shoes" class="avatar">
    <img id="bottom" class="avatar">
    <img id="necklace" class="avatar">
    <img id="top" class="avatar">
    <img id="head" class="avatar">
    <img id="earrings" class="avatar">
    <img id="facial_marks" class="avatar">
    <img id="facial_hair" class="avatar">
    <img id="face" class="avatar">
    <img id="glasses" class="avatar">
    <img id="hair" class="avatar">
    <img id="hat" class="avatar">
    <img id="prop" class="avatar">
  </div>
  <div class="color_palette">
    <div id="color_palette_left_arrow">
      <img src="/images/ui/left_arrow.png" border="0" />
    </div>
    <div id="head_color">
      <div id="color_1" value="1" class="clickable head_color"></div>
      <div id="color_2" value="2" class="clickable head_color"></div>
      <div id="color_3" value="3" class="clickable head_color"></div>
      <div id="color_4" value="4" class="clickable head_color"></div>
      <div id="color_5" value="5" class="clickable head_color"></div>
    </div>
    <div id="hair_color">
      <div id="hair_color_1" value="1" class="clickable hair_color"></div>
      <div id="hair_color_2" value="2" class="clickable hair_color"></div>
      <div id="hair_color_3" value="3" class="clickable hair_color"></div>
      <div id="hair_color_4" value="4" class="clickable hair_color"></div>
      <div id="hair_color_5" value="5" class="clickable hair_color"></div>
    </div>
  </div>
  <div id="show_controls" class="avatar_controls">TOUCH TO MODIFY</div>
  <div id="edit_controls" class="avatar_controls">TOUCH TO COMPLETE</div>
  <div class="bottom">
    <div class="botbtn">
      <img src="/images/ui/bt1.png" width="71" height="75" />
      Leaderboards
    </div>
    <div class="botbtn"><img src="/images/ui/bt2.png" width="71" height="75" />
      Calender
    </div> 
    <div class="botbtn"><img src="/images/ui/bt3.png" width="72" height="76" />
      Walls
    </div>
    <div class="botbtn"><img src="/images/ui/bt4.png" width="69" height="76" /><br/>
      Map
    </div>
    <div class="botbtn"><img src="/images/ui/bt5.png" width="51" height="78" /><br/>
      Game Center
    </div>
    <div class="others"><a href="/users/sign_out" data-method="delete" rel="nofollow"><img src="/images/ui/bt6.png" width="72" height="29" /></a><br/><br/>
      Logout
    </div>
  </div>
</div>
<script type="text/javascript">
<!--
var _wardrobeItems;
var _profile;
var _avatar;
var _major;
var _school;
var _itemForColor = new Array("head", "head_shape", "hair", "facial_hair");
var _itemRequired = new Array("head", "face");
var _level_meter =  new Array(100, 150, 200, 350, 400, 500, 550, 700, 750, 900);

OC = {
  SubCategory: {
    data: null,
    cursor: 0,
    section_size: 5,
    depth: 1,
    parent_item_type: null,
    
    load: function(data, parent_item_type) {
      this.data = data || [];
      this.cursor = 0;
      this.depth = (data && data.length) ? data[0].depth : this.depth;
      this.parent_item_type = parent_item_type;
      var $scroll = $('.lev' + this.depth + ' .subcategory_scroll');

      $scroll.scrollTop(0).empty().append(this.makeSection(this.data.slice(0, this.section_size)));
      (this.data.length > this.section_size) ? $(".nav_button").fadeIn(1000) : $(".nav_button").fadeOut();
    },
    
    scroll: function(direction) {
      var new_cursor = (direction == 'up' ? this.cursor - this.section_size : this.cursor + this.section_size),
          i = (new_cursor + this.data.length) % this.data.length,
          newData = [],
          scrollTo,
          $scroll = $('.lev' + this.depth + ' .subcategory_scroll'),
          $current_section = $('.subcategory_container', $scroll);

      for (var j = 0; j < this.section_size; j++) newData.push(this.data[(i + j) % this.data.length]);

      if (direction == 'up') {
        $current_section.before(this.makeSection(newData));
        $scroll.scrollTop(529);
        scrollTo = 0;
      } else {
        $current_section.after(this.makeSection(newData));
        $scroll.scrollTop(0);
        scrollTo = 529;
      }
      
      $scroll.animate({ scrollTop: scrollTo }, {
        duration: 500,
        complete: function() { $current_section.remove(); }
      })
      this.cursor = i;
    },
    
    makeSection: function(data) {
      var $container = $('<div class="subcategory_container"></div>'),
          parent_item_type = this.parent_item_type;

      $.each(data, function(i) {
        var $div = $('<div class="btn wardrobe_item clickable"></div>').data('model', this),
            image_file = this.image_file || ("level" + this.depth + "/" + parent_item_type + "/" + this.item_type);

        if (this.image_file && this.image_file == _avatar[this.item_type]) $div.addClass('selected');
        $div.append('<img src="/images/wardrobe/icon/' + image_file + '_icon.png" /><br/>' + this.name);
        $container.append($div);
      });
      return $container;
    }
  }
};

$(document).ajaxSend(function(e, xhr, options) {
  var token = $("meta[name='csrf-token']").attr("content");
  xhr.setRequestHeader("X-CSRF-Token", token);
});

$(window).load(function() {

  // CUSTOMIZE AVATAR
  $("#modify").click(function() {
    if ($("#wardrobe_options").css("display") == "none") {
      modifyAvatar();
    } else {
      saveAvatar();
      showProfile();
    }
  });

  // Finish editing a field
  $(".input").blur(function() {
  });

  // Change full name
  $("#full_name").click(function () {
    wardrobeSubCategorySlide('hide');
    changeName();
  });
  // Click a wardrobe option
  $(".wardrobe_item").live('click', function() {
    var $this = $(this),
        model = $this.data('model'),
        show_colorpalette = false; //Set for color palette

    // move indication icon to according position
    if(model.depth == 0) {
      $(".indi").animate({top: parseInt($this.position().top) + 50 +'px'},250);
    }
    
    //check the clicked item typed with array for showing color pallete
    $.each(_itemForColor, function(key, value) {
      if(parseInt(model.depth) > 1 && model.item_type == value) {
        show_colorpalette = true;
      }
    });
    
    if(show_colorpalette) {
      showColorPalette(model.item_type, $this);
    } else {
      $(".color_palette").fadeOut();
    }
    
    if (model.image_file) {
      // Clicked on an option that can be applied
      if (model.image_file == _avatar[model.item_type]) {
        // Already applied? Remove this item, unless it is a required item
        if (_itemRequired.indexOf(model.item_type) == -1) {
          _avatar[model.item_type] = "null";
        }
      } else {
        // Display the item on the avatar
        var image_file = model.image_file;
        var depth = parseInt(model.depth);
        if (depth > 1) {
          // If the head is changed, make sure that the head color is the same as the current body
          if (model.item_type == 'head') {
            var current_image_file = _avatar["body"];
            var skin = current_image_file.substr(current_image_file.length-1);
            image_file = image_file.substr(0, image_file.length-1)+skin;
          }
          // If the hair is changed, make sure that the color is the same for all hair
          if (model.item_type == 'hair' || model.item_type == 'facial_hair') {
            var current_image_file = _avatar["hair"];
            var skin = current_image_file.substr(current_image_file.length-1);
            image_file = image_file.substr(0, image_file.length-1)+skin;
          }
        }
        _avatar[model.item_type] = image_file;        
      }
      $("#" + model.item_type).attr("src", "/images/wardrobe/" + _avatar[model.item_type] + ".png");

      // Check if there is a back layer
      if (model.item_type == "hair") {
        item_type_back = model.item_type + "_back";
        _avatar[item_type_back] = _avatar[model.item_type] + "_back";
        $("#"+item_type_back).attr("src", "/images/wardrobe/" + _avatar[item_type_back] + ".png");
      }
      
      saveAvatar();
      // Refresh the current list of options in case option stat has changed
      showSubcategoryStat($this);
    } else {
      if (model.depth == 0) resetSubCategory(1);
      wardrobeSubCategorySlide('show', model.depth);
      OC.SubCategory.load(model.children, model.item_type);
    }
  });
  
  //Change major
  $("#icon_major").click(function () {
    wardrobeSubCategorySlide('hide');
    changeMajor();
  });
  
  //Scroll up the subcategories
  $("#dwnarr").click(function () { OC.SubCategory.scroll('down'); });
  
  //Scroll down the subcategories
  $("#uparr").click(function () { OC.SubCategory.scroll('up'); });

  //Color change for body & head
  $(".head_color").click(function(){
    var head = _avatar.head;
    var color = $(this).attr("value");
    var head = head.substr(0, head.length-1) + color;
    $("#avatar_body").attr("src", "/images/wardrobe/avatar/body/body_"+color+".png");
    $("#head").attr("src", "/images/wardrobe/"+head+".png");
    _avatar["head"] = head;
    _avatar["body"] = "avatar/body/body_"+color;
    saveAvatar();
  });

  // Hair color change
  $(".hair_color").click(function(){
    var hair = _avatar.hair;
    var color = $(this).attr("value");
    hair = hair.substr(0, hair.length-1) + color;
    var facial_hair = _avatar.facial_hair;
    if (facial_hair != 'null') {
      facial_hair = facial_hair.substr(0, facial_hair.length-1) + color;
      $("#facial_hair").attr("src", "/images/wardrobe/"+facial_hair+".png"); 
      _avatar["facial_hair"] = facial_hair;
    }
    $("#hair").attr("src", "/images/wardrobe/"+hair+".png"); 
    $("#hair_back").attr("src", "/images/wardrobe/"+hair+"_back.png");
    _avatar["hair"] = hair;
    _avatar["hair_back"] = hair+"_back";
    saveAvatar();
  });
  
  $.getJSON("/profile/show",
     function(data){
       _profile = data.profile;
       _avatar = data.avatar;
       _major = data.major;
       _school = data.school;
       if (data.new_profile == true) {
         acceptCode();
       }
       jStorage.flush()
       jStorage.set("j_profile",data.profile);
       jStorage.set("j_avatar",data.avatar);
       jStorage.set("j_major",data.major);
       //jStorage.set("j_school",data.school);
       showAvatar();
     }
  ).error(function() { 
    alert("Showing from stograge");
    _profile = jStorage.get("j_profile");
    _avatar = jStorage.get("j_avatar");
    _major = jStorage.get("j_major");
    //_school = jStorage.get("j_school");
    showAvatar();
  });
  showProfile();
});

function showColorPalette(_item_type, $this) {
  //Check if need to show the color palette
  if (_item_type == "head_shape" || _item_type == "head") {
    $("#head_color").show();
    $("#hair_color").hide();
  } else if (_item_type == "hair" || _item_type == "facial_hair") {
    $("#hair_color").show();
    $("#head_color").hide();
  }else {
    $("#hair_color").hide();
    $("#head_color").hide();
  }
  //Show & move color palette
  $(".color_palette").animate({left: parseInt($this.position().left) + 330 +'px'},250);
  $(".color_palette").animate({top: parseInt($this.position().top) + 280 +'px'},250);
  $(".color_palette").fadeIn(80);
}

function showSubcategoryStat(item) {
  var select = !item.hasClass('selected');
  item.closest('.subcategory_container').find('div').removeClass('selected');
  item.toggleClass('selected', select);
}

function resetSubCategory(depth) {
  if(depth==1) {
    $(".lev1 .subcategory_scroll .subcategory_container").html("");
  } else if(depth==2) {
    $(".lev2 .subcategory_scroll .subcategory_container").html("");
  }
}

function prepWardrobeIcons() {
  $.each(_wardrobeItems, function() {
    $("#category_" + this.item_type)
      .html("<img src='/images/wardrobe/icon/level0/" + this.item_type + "_icon.png' /><br/>" + this.name)
      .data('model', this);
  });
}

// forward: dir=1, backward: dir=-1, skip=5
function getSubCategorySubList(curIdx, dir, skip) {
  var idx = 0;
  tempList = new Array();
  for (i=0; i < _wardrobeItems.length; i++) {
    if (_wardrobeItems[i].parent_item_id == id) {
      tempList[idx] = _wardrobeItems[i];
      idx = idx++;
    }
  }
  count = idx;
  // Calculate the new index with wrap-around
  var newIdx = curIdx + (dir * skip);
  if (newIdx < 0) {
    newIdx = count + newIdx;
  } else if (newIdx >= count) {
    newIdx = newIdx - count;
  }
  var finalList = new Array();
  idx = 0;
  for (i=0; i < skip; i++) {
    finalList[i] = tempList[idx];
    idx++;
    if (idx >= count) {
      idx = 0;
    }
  }
  return finalList;
}

function showAvatar() {
  $("#full_name").html(_profile.full_name);
  if (_major != undefined) {
    $("#major").html(_major.name);
    $("#icon_major").attr("src", "/images/majors/" + _major.code + ".png");
  }

  if (_school != undefined) {
    $("#school").html(_school.code);
  }
  
  if(_avatar.points ==null) {
    _avatar.points = 0;
  }
  
  if(_avatar.badge_count ==null) {
    _avatar.badge_count = 0;
  }

  if(_avatar.level ==null) {
    _avatar.level = 1;
  }

  $("#quest_points").html(_avatar.points);
  $("#badge_count") .html((parseInt(_avatar.badge_count, 10) + 100).toString().substr(1));
  $("#avatar_level").html(_avatar.level);
  
  $("#progress_stats").html(_level_meter[_avatar.level]+" until level "+_avatar.level);
  $("#progressbar").animate({width :parseInt(_level_meter[_avatar.level] / 4.5)+"px"},1000);

  $("#background").attr("src", "/images/wardrobe/"+_avatar.background+".png");
  $("#avatar_body").attr("src", "/images/wardrobe/"+_avatar.body+".png"); //Id changed by vaibhav because having id "body" is creating problem with jQuery.position()
  // $("#hat_back").attr("src", "/images/wardrobe/"+_avatar.hat_back+".png");
  $("#hair_back").attr("src", "/images/wardrobe/"+_avatar.hair_back+".png");
  $("#shoes").attr("src", "/images/wardrobe/"+_avatar.shoes+".png");
  $("#bottom").attr("src", "/images/wardrobe/"+_avatar.bottom+".png");
  $("#necklace").attr("src", "/images/wardrobe/"+_avatar.necklace+".png");
  $("#top").attr("src", "/images/wardrobe/"+_avatar.top+".png");
  $("#head").attr("src", "/images/wardrobe/"+_avatar.head+".png");
  $("#earrings").attr("src", "/images/wardrobe/"+_avatar.earrings+".png");
  $("#facial_marks").attr("src", "/images/wardrobe/"+_avatar.facial_marks+".png");
  $("#facial_hair").attr("src", "/images/wardrobe/"+_avatar.facial_hair+".png");
  $("#face").attr("src", "/images/wardrobe/"+_avatar.face+".png");
  $("#glasses").attr("src", "/images/wardrobe/"+_avatar.glasses+".png");
  $("#hair").attr("src", "/images/wardrobe/"+_avatar.hair+".png");
  $("#hat").attr("src", "/images/wardrobe/"+_avatar.hat+".png");
  $("#prop").attr("src", "/images/wardrobe/"+_avatar.prop+".png");
}

function modifyAvatar() {
  if (_wardrobeItems == undefined) {
    showSpinner(true);
  // Fill-up the wardrobe for the first time
    $.getJSON("/profile/edit",
      function(data){
        for (i=0; i<data.length; i++) {
          if (data[i].depth == 0) {
            $("#category_"+data[i].item_type).attr("value", data[i].id);
          }
        }
        _wardrobeItems = buildWardrobeTree(data);
        prepWardrobeIcons();
        showSpinner(false);
      });  
  }

  $("#show_controls").hide();
  $("#edit_controls").show();
  $("#wardrobe_options").show();
  $("#user_stats").hide();
  wardrobeSubCategorySlide('hide');
  $(".color_palette").fadeOut();
  $("#select_note").show();
  $(".nav_button").hide();
}

function saveAvatar() {
  if (_school != undefined) {
    _profile.school_id = _school.id;
  }
  if (_major != undefined) {
    _profile.major_id = _major.id;
  }
  
  //Canvas operation for saving avatar thumbnail
  var newCanvas = document.createElement('canvas');
  newCanvas.height = '114';
  newCanvas.width = '114';
  
  var drawImageWidth = 120;
  var drawImageHeight = 350;
  
  var ctx = newCanvas.getContext("2d");
  
  var sources = {
      body: '/images/wardrobe/'+_avatar.body+'.png',
      hat: '/images/wardrobe/'+_avatar.hat+'.png',
      prop: '/images/wardrobe/'+_avatar.prop+'.png',
      glasses: '/images/wardrobe/'+_avatar.glasses+'.png',
      facial_hair: '/images/wardrobe/'+_avatar.facial_hair+'.png',
      facial_marks: '/images/wardrobe/'+_avatar.facial_marks+'.png',
      earrings: '/images/wardrobe/'+_avatar.earrings+'.png',
      necklace: '/images/wardrobe/'+_avatar.necklace+'.png',
      top: '/images/wardrobe/'+_avatar.top+'.png',
      hair: '/images/wardrobe/'+_avatar.hair+'.png',
      hair_back: '/images/wardrobe/'+_avatar.hair_back+'.png',
      face: '/images/wardrobe/'+_avatar.head+'.png',
  };

  loadCanvasImages(sources, function(images){
  //loadCanvasImages(sources, '');

    ctx.drawImage(images.body, 0,0,drawImageWidth,drawImageHeight);
    ctx.drawImage(images.hat, 0,5,drawImageWidth,drawImageHeight);
    ctx.drawImage(images.glasses, 0,5,drawImageWidth,drawImageHeight);
    ctx.drawImage(images.earrings, 0,5,drawImageWidth,drawImageHeight);
    ctx.drawImage(images.necklace, 0,5,drawImageWidth,drawImageHeight);
    ctx.drawImage(images.top, 0,5,drawImageWidth,drawImageHeight);
    ctx.drawImage(images.prop, 0,5,drawImageWidth,drawImageHeight);
    ctx.drawImage(images.hair, 0,5,drawImageWidth,drawImageHeight);
    ctx.drawImage(images.hair_back, 0,5,drawImageWidth,drawImageHeight);
    ctx.drawImage(images.face, 0,5,drawImageWidth,drawImageHeight);
    ctx.drawImage(images.facial_hair, 0,5,drawImageWidth,drawImageHeight);
    ctx.drawImage(images.facial_marks, 0,5,drawImageWidth,drawImageHeight);

    var dataURL = newCanvas.toDataURL('image/jpg');
    var base64 = dataURL.replace(/^data:image\/(png|jpg);base64,/, '') ;

    //Save avatar data
    $.ajax({ //Previously was with getJson but having problem of too many parameters in request URI so switched to $.ajax with post
      url: "/profile/save",
      data: { id: _profile.id, profile: _profile, avatar: _avatar, avatar_img: base64 }, 
      type: 'post',
      dataType: 'json',
      error: function(){alert("Error");},
      success: function(data){
        _profile = data.profile;
        _avatar = data.avatar;
      }
    }); //Ajax
  }); //loadCanvasImages
}

function showProfile() {
  $("#show_controls").show();
  $("#edit_controls").hide();
  $("#wardrobe_options").hide();
  $("#user_stats").show();
  $(".color_palette").fadeOut();
  wardrobeSubCategorySlide('hide');
  $("#select_note").show();
}

function acceptCode() {
  $.get('/profile/accept_code', function(data) {
    $('#dialog').html(data);
  })
  .success(function() { showDialog(true); });
}

function changeName() {
  $.get('/profile/change_name', function(data) {
    $('#dialog').html(data);
  })
  .success(function() { showDialog(true); });
}

function changeMajor() {
  $.get('/profile/change_major', function(data) {
    $('#dialog').html(data);
  })
  .success(function() { showDialog(true); });
}

var _last_status_lev1 = null;
var _last_status_lev2 = null;
var _last_status_lev3 = null;

// Show hide wardrobe subcategory menu items (with slide effect)
function wardrobeSubCategorySlide(action,depth) {
  // Reset the subcategory divs as may shifted while the vertical scorlling.
  $(".lev1 .subcategory_scroll #subcategory_container").css("marginTop" , "0px");
  $(".lev2 .subcategory_scroll #subcategory_container").css("marginTop" , "0px");
  if (action == 'show') {
    if(depth==0) {
      $(".lev1").show().animate({right: '100px'},500 ,function(){$(".lev1").css('z-index' , '1');});
      _last_status_lev1 = 'shown';
      
      if(_last_status_lev2=='shown') {
        $(".lev2").css('z-index' , '-1').animate({right: '-175px'},500 ,function(){$(".lev2").hide();resetSubCategory(2);});
      }
    } else if (depth==1) {
      $(".lev1").css('z-index' , '-1').animate({right: '385px'},500 ,function(){$(".lev1").hide();resetSubCategory(1);});
      $(".lev2").show().animate({right: '100px'},500 ,function(){$(".lev2").css('z-index' , '1');});
      _last_status_lev2 = 'shown';
      _last_status_lev1 = 'left';
    }
    $("#select_note").hide();
    $(".indi").show();
  } else if (action == 'hide') {
    $(".lev1").hide().animate({right: '0px'},500 ,function(){$(".lev1").css('z-index' , '-1');resetSubCategory(1);});
    $(".lev2").hide(function() {resetSubCategory(2);});
    $(".indi").hide();
    $("#select_note").show();
  }
}

function buildWardrobeTree(data) {
  var roots = pluck(data, 'id');
  jQuery.each(data, function() {
    if (this.parent_item_id && roots[this.parent_item_id]) roots[this.parent_item_id].children ?
      roots[this.parent_item_id].children.push(this) :
      roots[this.parent_item_id].children = [this];
  });
  return filter(jQuery.map(roots, function(r) {return r;}), function() { return !this.parent_item_id});
}

function filter(data, filterFn) {
  var select = [];
  jQuery.each(data, function() { if (filterFn.apply(this)) select.push(this); });
  return select;
}

function pluck(data, property) {
  var select = {};
  jQuery.each(data, function() { if (this[property]) select[this[property]] = this; });
  return select;
}

//function to load images for canvas operation
function loadCanvasImages(sources, callback){
  var images = {};
  var loadedImages = 0;
  var numImages = 0;
  // get num of sources
  for (var src in sources) {
      numImages++;
  }
  for (var src in sources) {
    images[src] = new Image(); 
    images[src].onload = function(){
      if (++loadedImages >= numImages) {
        
        callback(images);
      }
    };       
    images[src].src = sources[src];
  }
}

//-->
</script>
<div class="wrapper">
  <div class="menu_container">
    <ul>
      <li>
        <a href="javascript:void(0)" value="1" class="active">SUMMARY</a>
      </li>
      <li>
        <a href="javascript:void(0)" value="2" >PEOPLE</a>
      </li>
    </ul>
  </div>
  <div class="content_container">
    <form name="frm_task" id="frm_task" enctype="multipart/form-data">
      <div id="div_1" class="form_container">
        <div class="frm_label">
          Course
        </div>
        <div class="frm_input">
          <input type="text" name="course_name" id="course_name" class="large" onBlur='javascript:setStorage("course_name", $(this).val())' />
        </div>
        <div class="frm_label">
          Description
        </div>
        <div class="frm_input">
          <textarea name="course_descr" id="course_descr" rows="10" onBlur='javascript:setStorage("course_descr", $(this).val())'></textarea>
        </div>
        <div class="frm_label">
          Code
        </div>
        <div class="frm_input">
          <input type="text" name="course_code" id="course_code" class="small" onBlur='javascript:setStorage("course_code", $(this).val())' />
        </div>
      </div>
      <div id="div_2" class="form_container hide">
        <div class="frm_label small_label">
          Participants
        </div>
        <div class="frm_input" id="participants_container">
          <% @people.each do |p| %>
          <input type="checkbox" name="chk_participants[]" id="chk_participants_1" />
          <input type="text" name="participants[]" value="<%= p.full_name %>" id="participants_1" class="medium" />
          <% end %>
        </div>
      </div>
      <div class="frm_button">
        <input type="button" name="btn_course" id="btn_course" value="Save"/>
      </div>
      <input type="hidden" name="course_id" id="course_id_hdn" value="" />
      <input type="hidden" name="campus_id" id="course_campus_id_hdn" value="<%= @profile.school_id %>" />
    </form>
  </div>
</div>
<script type="text/javascript">
<!-- 

//Set CSRF Token (Required for ajax request (post))
$(document).ajaxSend(function(e, xhr, options) {
  var token = $("meta[name='csrf-token']").attr("content");
  xhr.setRequestHeader("X-CSRF-Token", token);
});

$(document).ready(function(){
  
  //Toggle Tabs
  $(".menu_container a").click(function(){
    idx = $(this).attr("value");
    $(".menu_container a").removeClass("active");
    $(this).addClass("active");
    for(i=0;i<3;i++){
      if(idx != i){
        $("#div_"+i).hide();
      }
    }
    $("#div_"+idx).fadeIn();
  });
  
  //Submit data
  $("#btn_course").click(function(){
    //Get data from offline storage
    course_id = $("#course_id_hdn").val();
    course = getStorage("course_name");
    descr = getStorage("course_descr");
    code = getStorage("course_code");
    //campus_id = getStorage("course_campus_id");
    campus_id = $("#course_campus_id_hdn").val();
    
    var dataString = 'id='+ course_id +'&course='+ course + '&descr=' + descr + '&code=' + code + '&campus_id=' + campus_id;  
    //alert (dataString);return false;  
    $.ajax({  
      type: "POST",  
      url: "/course/save",  
      data: dataString,
      dataType:"json",
      success: function(data) {
        if (data) {
          alert("Data Saved");
          $("#course_id_hdn").val(data.course.id);
        } else {
          alert("ERROR");
        }
      }
    });  
    return false;  
  });
  
});

//Set temp storage
function setStorage(key,value){
  //alert(key +"==="+ value);//debug
  if(value!=""){
    jStorage.set(key, value);
  }
}
//Get temp storage
function getStorage(key) {
  var val
  if(jStorage.get(key)!=""){
    val = jStorage.get(key);
  }
  return val;
}
-->
/*
<!--
//For dynamic added nodes
var _counter = 2;
var _counter_people = 2;
//For percent counter
var _percent = 100;
//For Autocomplete tags
var _outComeTags = [];
var _participantsTags = [];
var i = 0;
var j = 0;
//Set CSRF Token (Required for ajax request (post))
$(document).ajaxSend(function(e, xhr, options) {
  var token = $("meta[name='csrf-token']").attr("content");
  xhr.setRequestHeader("X-CSRF-Token", token);
});

$(document).ready(function(){
  //Flush the previous offline storage
  jStorage.flush()
  //Toggle Tabs
  $(".menu_container a").click(function(){
    idx = $(this).attr("value");
    $(".menu_container a").removeClass("active");
    $(this).addClass("active");
    for(i=0;i<6;i++){
      if(idx != i){
        $("#div_"+i).hide();
      }
    }
    $("#div_"+idx).fadeIn();
  });
    
  //Submit data
  $("#btn_task").click(function(){
    //Get data from offline storage
    task_id = $("#task_id_hdn").val();
    task = getStorage("task_name");
    descr = getStorage("task_descr");
    due_date = getStorage("task_due_date");
    level = getStorage("task_level");
    
    //For outcome data object (gather values from dynamic created nodes)
    var outcomeObject = [];
    //Prepare all outcomes created as nodes
    for(i=1; i<_counter; i++) {
      storage_key = "task_outcomes_"+i;
      outcomeObject[i] = getStorage(storage_key);
    }
    
    var dataString = 'id='+ task_id +'&task='+ task + '&descr=' + descr + '&due_date=' + due_date + '&outcomes=' +outcomeObject + '&level=' +level ;  
    //alert (dataString);return false;  
    $.ajax({  
      type: "POST",  
      url: "/task/save",  
      data: dataString,
      dataType:"json",
      success: function(data) {
        if (data) {
          alert("Data Saved");
          $("#task_id_hdn").val(data.task.id);
        } else {
          alert("ERROR");
        }
      }
    });  
    return false;  
  });
  
  $(function() {
    //Due date datepicker
    $("#due_date").datepicker({
      dateFormat: 'yy-mm-dd',
      onSelect: function(dateText, inst) {setStorage("task_due_date", dateText);}
    });
    
    //fill up the outcome tags object
    
    //fill up the participants tags object
    
    
    $("#outcome_container .medium").live("keydown.autocomplete", function() {
      $(this).autocomplete({
        source: _outComeTags,
        select: function(event, ui){
        
        }
      });
    });
    
    $("#outcome_container .medium").live("focusout", function(){
      current_node = _counter - 1;
      if($("#outcomes_"+current_node).val()!="") {
        addNode('outcome');
      }
    });
    
    $("#participants_container .medium").live("keydown.autocomplete", function() {
      $(this).autocomplete({
        source: _participantsTags,
        select: function(event, ui){
          addNode('people');
        }
      });
    });
    
  // Setup html5 file upload
  $("#upload_container").pluploadQueue({
    // General settings
    runtimes : 'html5',
    url : '/task/upload_resource',
    max_file_size : '10mb',
    chunk_size : '1mb',
    unique_names : true,
    filters : [
      {title : "Image files", extensions : "jpg,gif,png"},
      {title : "Zip files", extensions : "zip"}
    ],
    // Resize images on clientside if we can
    resize : {width : 320, height : 240, quality : 90}
  });
    
  }); // $(function) ends
}); //document.ready ends

//Set temp storage
function setStorage(key,value){
  //alert(key +"==="+ value);//debug
  if(value!=""){
    jStorage.set(key, value);
  }
}
//Get temp storage
function getStorage(key) {
  var val
  if(jStorage.get(key)!=""){
    val = jStorage.get(key);
  }
  return val;
}
//Adding text field nodes for outcomes/peoples
function addNode(element) {
  if(element == "outcome") {
    var newNode = $(document.createElement('div')).attr("id", 'outcome_node_div' + _counter);
    newNode.css("marginTop" , "20px");
    //newNode.html('<input type="text" name="outcomes[]" id="outcomes_' + _counter + '" rel="outcomes_' + _counter + '" value="" class="medium" onblur="javascript:setStorage(\'task_outcomes_'+_counter+'\', $(this).val())" /> &nbsp;&nbsp;<input type="text" name="percentage[]" id="percentage_' + _counter + '" rel="outcomes_' + _counter + '" value="" class="small" onblur="javascript:setPercentages($(this));">');
    newNode.html('<input type="text" name="outcomes[]" id="outcomes_' + _counter + '" value="" class="medium" onblur="javascript:setStorage(\'task_outcomes_'+_counter+'\', $(this).val())" />');
    newNode.appendTo("#outcome_container");
    _counter++;
  } else if (element == "people") {
    var newNode = $(document.createElement('div')).attr("id", 'people_node_div' + _counter_people);
    newNode.css("marginTop" , "20px");
    newNode.html('<input type="checkbox" name="chk_participants[]" id="chk_participants_'+ _counter_people +'" /><input type="text" name="participants[]" id="participants_' + _counter_people + '" value="" class="medium">');
    newNode.appendTo("#participants_container");
    _counter_people++;
  }
}

//Showing Percentage/points for each outcome
function setPercentages(obj) {
  var total = 0;
  var objVal = parseInt($.trim(obj.val().replace('%', '')));
  $.each($('input[name$="percentage[]"]'), function() {
      rel = $(this).attr("rel");
      if($("#"+rel).val()) {  
        val = $(this).val();
        if(val!="") {
          val = parseInt($.trim(val.replace('%', '')));
        }else{
          val = 0;
        }
        if(total>=0) {
          total = parseInt(total) + parseInt(val);
        }
        if(total>=100) {
          total = total - 100;
          obj.val(total);
        } else {
          total = 100 - total; 
          alert(total)
          obj.val(objVal + total);
        }
        //if($(this.id))
      }
  });
  //alert(total);
  //obj.val(total);
}
-->
*/
</script>
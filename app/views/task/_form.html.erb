<script type="text/javascript">
<!--
//Adding text field nodes for outcomes/peoples
function addNode(element) {
  if(element == "outcome") {
    var newNode = $(document.createElement('div')).attr("id", 'outcome_node_div' + _counter);
    newNode.css("marginTop" , "20px");
    newNode.html('<input type="text" name="outcomes[]" id="outcomes_' + _counter + '" value="" class="medium" onblur="javascript:setStorage(\'task_outcomes_'+_counter+'\', $(this).val())" />');
    newNode.appendTo("#outcome_container");
    _counter++;
  } else if (element == "people") {
    var newNode = $(document.createElement('div')).attr("id", 'task people_node_div' + _counter_people);
    newNode.css("marginTop" , "20px");
    newNode.html('<input type="text" name="add_task_people_email[]" value="Type in email to add" class="medium node" id="add_task_people_email_' + _counter_people + '" />');
    newNode.appendTo("#add_task_people_container");
    _counter_people++;
  }
}
-->
</script>
<div class="screen_title">
  VIEW TASK
</div>
<div class="content_wrapper">
  <div class="content_container">
    <form name="frm_task" id="frm_task" enctype="multipart/form-data">
      <div id="div_1" class="form_container">
        <div class="left_form_container">
          <div class="thumbnail_large">
          </div>
          <div id="resource_container">
            <ul id="filelist">
              <!-- file list here -->
              <% if @task %>
                <% @task.attachments.each do |a| %>
                  <li id="item_<%=a.id%>">
                    <div class="file_name" id="filename_<%= a.id %>">
                      <a href="<%=a.resource.url%>" target="_blank">
                        <%=a.resource_file_name%>
                      </a>
                    </div>
                    <div class="file_remove" id="fileremove_<%=a.id%>">
                      <a href="javascript:void(0)" class="remove_resource" id="<%= a.id %>">
                        Remove
                      </a>
                    </div>
                  </li>
                <% end %>
              <% end %>
            </ul>
          </div>
          <div id="upload_container">
            DROP A FILE HERE TO MAKE IT AVAILABLE FOR ALL PARTICIPANTS
          </div>
        </div>
        <div class="right_form_container">
          <div style="width:420px;background:#D4D6D7;padding:5px 5px 10px 5px;float:left">
            <p>Select a course and category first to apply the starting information that you have setup for new tasks</p>
            <div style="float:left;width:210px;">
              <span>Course</span>
              <select name="course" id="course">
                <option value="">SELECT</option>
                <% @courses.each do |c| %>
                <option value="<%= c.id %>" <%=@task.course_id==c.id ? "Selected" : ""  if @task %>><%= c.name %></option>
                <% end %>
              </select>
            </div>
            <div style="float:left;width:210px;">
              <span>Category</span>
              <div id="categories_container" class='<%= @task ? "" : "hide" %>'>
                <% if @task %>
                  <%= render :partial => "course_categories", :locals=>{:categories=>@task.course.categories} %>
                <% end %>
              </div>
            </div>
          </div>
          <div class="frm_input">
            <span>Task</span>
            <input type="text" name="task" id="task" class="large" value="<%=@task.name if @task %>" onblur='javascript:setStorage("task_name", $(this).val())'/>
          </div>
          <div class="frm_input">
            <span>Due date</span> <br />
             <input type="text" name="due_date" id="due_date" class="medium" value="<%=@task.due_date if @task %>"/>
          </div>
          <div class="frm_input">
            <span>Shared Notes</span> <br />
            <textarea name="descr" id="descr" rows="10" onblur='javascript:setStorage("task_descr", $(this).val())'><%=@task.descr if @task %></textarea>
          </div>
          <div class="frm_input">
            <span>Private Notes</span> <br />
            <textarea name="notes" id="notes" rows="10"></textarea>
          </div>
        </div>
      </div>
      <div id="div_2" class="form_container hide">
        <div class="frm_label">
          Level
        </div>
        <div class="frm_input">
          <div class="level_radio">
            <input type="radio" name="level" id="level_easy" value="1" onClick='javascript:setStorage("task_level", $(this).val())' <%=@task.level==1 ? "checked" : ""  if @task %>/>
          </div>
          <div class="level_label">
            Easy
          </div>
          <div class="level_radio">
            <input type="radio" name="level" id="level_medium" value="2" onClick='javascript:setStorage("task_level", $(this).val())' <%=@task.level==2 ? "checked" : ""  if @task %>/>
          </div>
          <div class="level_label">
            Medium
          </div>
          <div class="level_radio">
            <input type="radio" name="level" id="level_high" value="3"  onClick='javascript:setStorage("task_level", $(this).val())' <%=@task.level==3 ? "checked" : ""  if @task %>/>
          </div>
          <div class="level_label">
            Hard
          </div>
        </div>
        <div class="frm_label">
          Outcomes
        </div>
        <div class="frm_input" id="outcomes_container">
          <% if @outcomes %>
            <%= render :partial => "course_outcomes" %>
          <% end %>
        </div>
      </div>
      <div id="div_3" class="form_container hide">
        <div class="frm_label">
          Organizer
        </div>
        <div class="frm_input">
          <input type="text" name="organizer" id="organizer" value="<%=@profile.full_name%>" readonly="true" class="medium" onblur='javascript:setStorage("task_organizer", $(this).val())'/>
        </div>
        <div class="frm_label small_label">
          Participants
        </div>
        <div class="frm_input" id="participants_container">
          <% if @people %>
            <%= render :partial => "course_peoples" %>
          <% end %>
        </div>
      </div>
      <input type="hidden" name="task_id" id="task_id_hdn" value="<%=@task.id if @task %>" />
      <input type="hidden" name="school_id" id="course_school_id_hdn" value="<%= @profile.school_id %>" />
    </form>
  </div>
</div>
<div class="menu_container">
  <div>
    <a href="javascript:void(0)" value="1" class="active">Task</a>
  </div>
  <div>
    <a href="javascript:void(0)" value="2" >Grading</a>
  </div>
  <div>
    <a href="javascript:void(0)" value="3" >Participants</a>
  </div>
</div>
<div id="sidebar_right">
  <div id="crud_level">
    <input type="button" name="btn_task" id="btn_task" value="Save"/>
    <!-- input type="button" name="menu_btn_duplicate" id="menu_btn_duplicate" rel="/task/duplicate" value="Duplicate" class="menu_btn"/>
    <input type="button" name="menu_btn_hide" id="menu_btn_hide" value="Hide"/>
    <input type="button" name="menu_btn_fav" id="menu_btn_fav" value="Fav" /-->
    <input type="button" name="menu_btn_print" id="menu_btn_print" value="Print"/>
    <input type="button" name="task_btn_remove" id="task_btn_remove" class="hide" value="Remove"/>
  </div><!-- crud_level -->
</div>
<script type="text/javascript">
<!--
//Flush the previous offline storage
jStorage.flush();
//For dynamic added nodes
var _counter = 2;
var _counter_people = 2;
//For percent counter
var _percent = 100;
//For Autocomplete tags
var _outComeTags = [];
var _participantsTags = [];
var i = 0;
var j = 0;

var _taskPeopleObject = [];
var _addTaskPeopleEmailObject = [];
var token = $("meta[name='csrf-token']").attr("content");
//Set CSRF Token (Required for ajax request (post))
$(document).ajaxSend(function(e, xhr, options) {
  xhr.setRequestHeader("X-CSRF-Token", token);
});

//set storage on load while view of course
if($("#task").val()!="") {setStorage("task_name", $("#task").val());}
if($("#descr").val()!="") {setStorage("task_descr", $("#descr").val());}
if($("#course").val()!="") {setStorage("task_course", $("#course").val());}
if($("#due_date").val()!="") {setStorage("task_due_date", $("#due_date").val());}
if($("#level").val()!="") {setStorage("task_level", $("#level").val());}
if($("#course_categories") && $("#course_categories").val()!="") {setStorage("task_category", $("#course_categories").val());}

 
$(document).ready(function(){
  
  //Toggle Tabs
  $(".menu_container a").unbind('click').bind('click', function(){
    idx = $(this).attr("value");
    $(".menu_container a").removeClass("active");
    $(this).addClass("active");
    for(i=0;i<4;i++){
      if(idx != i){
        $("#div_"+i).hide();
      }
    }
    
    if(idx == 3) {
      $("#task_btn_remove").fadeIn();
    } else {
     $("#task_btn_remove").hide();
    }
    $("#div_"+idx).fadeIn();
  });
  
  //Submit data
  $("#btn_task").unbind('click').bind('click', function(){
    //Get data from offline storage
    task_id = $("#task_id_hdn").val();
    task = getStorage("task_name");
    descr = getStorage("task_descr");
    due_date = getStorage("task_due_date");
    level = getStorage("task_level");
    course_id = getStorage("task_course");
    school_id = $("#course_school_id_hdn").val();
    category_id = getStorage("task_category");
    
    //For outcome data object (gather values from dynamic created nodes)
    var outcomeObject = [];
    
    i = 0
    $("input[name='chk_outcomes[]']").each(function(){
        if(this.checked) {
          storage_key = "task_outcomes_"+$(this).attr('id');
          outcomeObject[i] =  getStorage(storage_key);
          i++
        }
    });
    
    //get people id from offline storage
    j = 0;
    $.each($('input[name="task_people_id[]"]'), function() {
      _taskPeopleObject[j] = getStorage($(this).attr('id'));
      j++;
    });
    
    //get people email from offline storage
    k = 0;
    $.each($('input[name="add_task_people_email[]"]'), function() {
      _addTaskPeopleEmailObject[k] = getStorage($(this).attr('id'));
      k++;
    });
    
    var dataString = 'id='+ task_id +'&task='+ task + '&descr=' + descr + '&course_id=' + course_id + '&category_id=' + category_id + '&due_date=' + due_date + '&outcomes=' +outcomeObject + '&level=' +level + '&people_id=' + _taskPeopleObject + '&people_email=' + _addTaskPeopleEmailObject + '&school_id=' +school_id;  
    //alert (dataString);return false;  
    $.ajax({  
      type: "POST",  
      url: "/task/save",  
      data: dataString,
      dataType:"json",
      success: function(data) {
        if (data) {
          //alert("Data Saved");
          $("#task_id_hdn").val(data.task.id);
          $("#container").load('/task/index');
        } else {
          alert("ERROR");
        }
      }
    });  
    return false;  
  });
  
  $("#course").unbind('change').bind( "change", function(){
    //alert($(this).val()); return false;
    courseId = $(this).val();
    //To fill out the categories
    $.get('/task/course_categories/', {course_id:courseId}, function(data) {
      $('#categories_container').html(data);
      $('#categories_container').show();
      setStorage('task_course', courseId);
    }).complete(function(){
      //To fill out the outcomes
      $.get('/task/course_outcomes/', {course_id:courseId}, function(data) {
        $('#outcomes_container').html(data);
      }).complete(function(){
        //To fill out the participants
        $.get('/task/course_peoples/', {course_id:courseId}, function(data) {
          $('#participants_container').html(data);
        });
      });
    });
  });
  
  $(function() {
    //Due date datepicker
    $("#due_date").datepicker({
      dateFormat: 'yy-mm-dd',
      onSelect: function(dateText, inst) {setStorage("task_due_date", dateText);}
    });
    
    $("#participants_container .medium").unbind('keydown.autocomplete').bind("keydown.autocomplete", function() {
      $(this).autocomplete({
        source: _participantsTags,
        select: function(event, ui){
          //addNode('people');
        }
      });
    });
    
    $("#add_task_people_container .node").unbind('focus').bind("focus", function(){
      pval = $(this).val();
      if(pval=="Type in email to add") {
        $(this).val("");
      }
    });
    
    $("#add_task_people_container .node").unbind('focusout').bind("focusout", function(){
      pval = $(this).val();
      var current_node = _counter_people - 1;
      var filter=/^.+@.+\..{2,3}$/
      var pval = $("#add_task_people_email_"+current_node).val();
      if(pval != "" && pval!="Type in email to add") {
        if(filter.test(pval)) {
          setStorage("add_task_people_email_"+current_node, pval);
          addNode('people');
        } else {
          alert("Please enter a valid email");
        }
      } else {
         $("#add_task_people_email_"+current_node).val("Type in email to add");
      }
    });
    
    //Remove people nodes
    $("#task_btn_remove").unbind('click').bind("click", function(){
      $("input[name='chk_task_people[]']").each(function(){
        if(this.checked) {
          div_id = $(this).attr('id');
          $("#task_people_div_"+div_id).remove();
        }
      });
    });
    
    //Uploader file upload
    var uploader = new plupload.Uploader({
      runtimes : 'html5',
      drop_element: 'upload_container',
      container: 'upload_container',
      max_file_size : '10mb',
      url : '/task/upload_resource',
      multipart_params: {
        'authenticity_token' : token,  //For csrf-authentication
        'school_id' : $("#course_school_id_hdn").val(),
        'task_id' : $("#task_id_hdn").val()
      }
    });
    
    uploader.init();
    
    uploader.bind('FilesAdded', function(up, files) {
      for (var i in files) {
        var item = '<li id="item_'+files[i].id+'"><div class="file_name" id="filename_'+files[i].id+'">'+files[i].name+'</div><div class="file_remove" id="fileremove_'+files[i].id+'"></div></li>';
        $('#filelist').append(item);
      }
      
      if($("#task_id_hdn").val() == '') {
        
        var task_name = getStorage("task_name");
        var task_due_date = getStorage("task_due_date");
        var task_course = getStorage("task_course");
        var task_category = getStorage("task_category");
        
        $.getJSON('/task/save/', {task:task_name, course_id:task_course, category_id: task_category, due_date:task_due_date}, function(data) {
          $('#task_id_hdn').val(data.task.id);
          uploader.settings.multipart_params.task_id = data.task.id;
          uploader.start();
        });
      }else{
        uploader.start();
      }
    });

    uploader.bind('UploadProgress', function(up, file) {
      $('#fileremove_'+file.id).html('<span>Uploading..</span>');
    });
    
    uploader.bind('Error', function(up, err) {
      $('#fileremove_'+err.file.id).html('Error!!');
      up.refresh();
    });
    
    uploader.bind('FileUploaded', function(up, file, info) {
      var obj = jQuery.parseJSON( info.response);
      $('#filename_'+file.id).html('<a href="'+ obj.resource_url +' " target="_blank">' + obj.attachment.resource_file_name + '</a>');
      $('#fileremove_'+file.id).html('<a href="javascript:void(0)" class="remove_resource" id="' + obj.attachment.id + '"> Remove </a>');
      $('#item_'+file.id).attr('id', 'item_'+obj.attachment.id);
    });
    
  }); // $(function) ends
  
  $('#filelist').delegate('.file_remove a', 'click', function(){
    var attachment_id = $(this).attr("id");
    $.getJSON('/task/remove_attachment/', {attachment_id:attachment_id}, function(data) {
      //alert("removed");
      $('#item_'+attachment_id).remove();
    });
  });
  
}); //document.ready ends
-->
</script>